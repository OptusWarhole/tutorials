@charset "UTF-8";
/**
    *
    *           _____ _______ _____  _____ _____ 
    *          |_   _|__   __/ ____|/ ____/ ____|
    *            | |    | | | |    | (___| (___  
    *            | |    | | | |     \___ \\___ \ 
    *           _| |_   | | | |____ ____) |___) |
    *          |_____|  |_|  \_____|_____/_____/ 
    *
    *
    *
    * SETTINGS
    *
    * Fonts................Import every local fonts
    * Colors...............inuitcssâ€™ core and setup settings.
    * Global...............Project-wide variables.
    *
    *
    * MIXINS
    *
    * Font-size............A mixin which guarantees baseline-friendly line-heights.
    * Clearfix.............Micro clearfix mixin.
    * Hidden...............Mixin for hiding elements.
    *
    *
    * GENERIC
    *
    * Blank...............Blank
    *
    *
    * ELEMENTS
    *
    * Blank................Blank.
    *
    *
    * OBJECTS
    *
    * Blank................Blank.
    *
    *
    * COMPONENTS
    *
    * Buttons..............Buttons' default appearance.
    * Headings.............Headings' default appearance.
    * Images...............Images' default appearance.
    * Inputs...............Inputs' default appearance.
    * Links................Links' default appearance.
    * Lists................Lists' default appearance.
    * Paragraphs...........Paragraphs' default appearance.
    *
    *
    * HACKS
    *
    * Hide.................Helper classes to hide content
    * Clearfix.............Bind our clearfix onto a utility class.
    *
    * Print................Reset-like styles taken from the HTML5 Boilerplate.
    *
    */
/*
 * Naming variable
 *
 * Start by naming the variable "$color" and add the name (camelCase) that you find here
 * http://www.color-blindness.com/color-name-hue/
 *
 * Examples :
 * - "darken( $base-color, 10% )"
 * - "lighten( $base-color, 10% )"
 *
 * - rgba( $color-alizarin-crimson, .7 )
 *
 *
 */
/*==========================================================================
Black
========================================================================== */
/*==========================================================================
Grey
========================================================================== */
/*==========================================================================
White
========================================================================== */
/*==========================================================================
Red
========================================================================== */
/*==========================================================================
Blue
========================================================================== */
/*==========================================================================
Green
========================================================================== */
/*==========================================================================
Orange
========================================================================== */
p {
  color: red;
}

* {
  box-sizing: border-box;
}

body {
  font-family: Open Sans;
  font-size: 16px;
  line-height: 1.4;
  background-color: #D8E0E5;
}

.card {
  position: absolute;
  top: 50%;
  left: 50%;
  overflow: hidden;
  background-color: #FFFFFF;
  box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.3);
  transition: box-shadow 0.2s;
  transform: translateX(-50%) translateY(-50%) translateZ(0px);
}

.card:hover {
  box-shadow: 0px 0px 50px rgba(0, 0, 0, 0.3);
}

.card a {
  color: inherit;
  text-decoration: none;
}

.card__date {
  position: absolute;
  top: 20px;
  right: 20px;
  height: 45px;
  width: 45px;
  padding: 10px 0px 0px 0px;
  background-color: #EF5A31;
  font-weight: bold;
  color: #FFFFFF;
  line-height: 13px;
  text-align: center;
  border-radius: 50%;
}

.card__date__day {
  display: block;
  font-size: 14px;
}

.card__date__month {
  display: block;
  font-size: 10px;
  text-transform: uppercase;
}

.card__thumb {
  overflow: hidden;
  height: 235px;
  background-color: #000000;
  transition: height 0.2s;
}

.card__thumb img {
  display: block;
  opacity: 1;
  transition: opacity 0.2s, transform 0.2s;
  transform: scale(1);
}

.card:hover .card__thumb img {
  opacity: 0.6;
  transform: scale(1.2);
}

.card:hover .card__thumb {
  height: 90px;
}

.card__body {
  position: relative;
  height: 185px;
  padding: 20px 20px 20px 20px;
  transition: height 0.2s;
}

.card:hover .card__body {
  height: 330px;
}

.card__category {
  position: absolute;
  top: -25px;
  left: 0;
  height: 25px;
  padding: 0 15px 0 15px;
  background-color: #EF5A31;
  font-size: 11px;
  color: #FFFFFF;
  line-height: 25px;
  text-transform: uppercase;
}

.card__title {
  margin: 0 0 0 0;
  padding: 0 0 0 0;
  font-size: 22px;
  font-weight: bold;
  color: #000000;
}

.card:hover .card__title {
  animation: titleBlur 0.2s;
}

.card__subtitle {
  margin: 0 0 0 0;
  padding: 0 0 0 0;
  font-size: 19px;
  color: #EF5A31;
}

.card__description {
  position: absolute;
  right: 20px;
  bottom: 65px;
  left: 20px;
  margin: 0 0 0 0;
  padding: 0 0 0 0;
  opacity: 0;
  font-size: 14px;
  color: #666C74;
  line-height: 27px;
  transition: opacity 0.1s, transform 0.1s;
  transition-delay: 0s;
  transform: translateY(25px);
}

.card:hover .card__description {
  opacity: 1;
  transition-delay: 0.1s;
  transform: translateY(0);
}

.card__footer {
  position: absolute;
  right: 20px;
  bottom: 20px;
  left: 20px;
  font-size: 11px;
  color: #a3a9ab;
}

.card__footer .icon--comment {
  margin-left: 12px;
}

.icon {
  display: inline-block;
  vertical-align: middle;
  margin-right: 5px;
}

.icon--comment {
  height: 14px;
  width: 14px;
  margin-top: -2px;
  background-image: url(../imgs/icon-comment.png);
}

.icon--time {
  height: 17px;
  width: 10px;
  margin-top: -3px;
  background-image: url(../imgs/icon-time.png);
}

@keyframes titleBlur {
  0% {
    opacity: 0.6;
    text-shadow: 0px 5px 5px rgba(0, 0, 0, 0.6);
  }
  100% {
    opacity: 1;
    text-shadow: 0px 5px 5px transparent;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
